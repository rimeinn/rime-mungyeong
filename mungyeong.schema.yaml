schema:
  schema_id: mungyeong
  name: 文鏡
  version: '20250807'
  author:
    - kuroame
  description: |
    韓国語入力機
  dependencies:
    - mungyeong_dubeolsik
    - mungyeong_romaja
    - mungyeong_reverse


switches:
  - name: ascii_mode
    reset: 0
    states: [ 한, 영 ]
  - name: candidates
    states: [ 無, 漢 ]

engine:
  processors:
    - ascii_composer
    - lua_processor@*mungyeong/mungyeong_hangul_speller
    - recognizer
    - key_binder
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - lua_translator@*mungyeong/mungyeong_translator
  filters:
    # - uniquifier

translator:
  dictionary: mungyeong.extended
  enable_user_dict: true
  enable_completion: false
  enable_sentence: false

punctuator:
  __include: mungyeong:/punctuator

editor:
  bindings:
    Return: commit_script_text

mungyeong:
  # Choose the layout you want to use.
  # 2-set and romaja layouts are provided by default.
  # You can also define your own layout following these steps:
  # 1. Create new files:
  #    - mungyeong_your_layout.schema.yaml (reference: mungyeong_dubeolsik.schema.yaml)
  #    - mungyeong_your_layout.dict.yaml (reference: mungyeong_dubeolsik.dict.yaml)
  # 2. Add your layout as a dependency in the schema/dependencies of this file.
  # 3. Change the layout value: your_layout
  # 4. Re-deploy to apply changes
  layout: dubeolsik # dubeolsik, romaja

  # Automatically insert a space after selecting a candidate or committing text
  auto_space: true

reverse_lookup:
  dictionary: mungyeong_reverse.extended
  prefix: "`"
  suffix: "'"
  tips: "〔逆〕"

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "^`[a-z]*'?$"
    mungyeong: '(^[가-힣ㄱ-ㅎㅏ-ㅣ][가-힣ㄱ-ㅎㅏ-ㅣa-zA-Z]*$)'

key_binder:
  import_preset: default
  bindings:
    __patch:
      - mungyeong:/key_bindings/mungyeong_switches